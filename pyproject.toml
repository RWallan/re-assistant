[tool.poetry]
name = "re-assistant"
version = "0.1.0"
description = "Resident Evil Assistant será uma biblioteca capaz de buscar dados do Resident Evil Database, disponível em: https://www.residentevildatabase.com/ e disponibilizar informações do mundo de Resident Evil através de uma interface de linha de comando (CLI)."
authors = ["RWallan <3am.richardwallan@gmail.com>"]
readme = "README.md"
keywords = ["gpt", "python3", "cli", "resident-evil"]
license = "MIT"
classifiers = [
  "Environment :: Console",
  "Natural Language :: Portuguese (Brazilian)",
  "Programming Language :: Python :: 3.11",
]


[tool.poetry.dependencies]
python = "^3.11"
openai = "^1.27.0"
beautifulsoup4 = "^4.12.3"
httpx = "^0.27.0"
loguru = "^0.7.2"
pydantic-settings = "^2.2.1"
toml = "^0.10.2"


[tool.poetry.group.dev.dependencies]
ruff = "^0.4.3"
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
ignr = "^2.2"
pre-commit = "^3.7.0"
taskipy = "^1.12.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79

[tool.ruff.format]
preview = true
quote-style = "single"

[tool.ruff.lint]
preview = true
select = ["I", "F", "E", "W", "PL", "PT"]

[tool.pytest.ini_options]
pythonpath = "."

[tool.taskipy.tasks]
lint = "ruff check . && ruff check . --diff"
format = "ruff check . --fix && ruff format ."
pre_test = "task lint"
test = "pytest -s -x -vv"
